#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CodeSmith.Data.Linq;
using CodeSmith.Data.Linq.Dynamic;
using classRoomWebSite.Data;

namespace classRoomWebSite.Data.Controllers.API
{
    [CodeSmith.Data.Web.Http.PagingAndFiltering]
    public partial class Cat1Controller : ApiController
    {
        private classRoomWebSite.Data.classRoomWebSiteDataContext _context = new classRoomWebSite.Data.classRoomWebSiteDataContext();

        #region Get

        public classRoomWebSite.Data.Cat1 GetByKey(System.Int32 identification)
        {
            var cat1 = _context.Cat1.GetByKey(identification);
            if (cat1 == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            return cat1;
        }

        public IQueryable<classRoomWebSite.Data.Cat1> GetAll()
        {
            return _context.Cat1.AsQueryable();
        }

        public IQueryable<classRoomWebSite.Data.Cat1> GetByName(System.String name)
        {
            return _context.Cat1.ByName(name).AsQueryable();
        }

        #endregion

        public HttpResponseMessage Post(classRoomWebSite.Data.Cat1 value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            _context.Cat1.AddObject(value);
            _context.SaveChanges();

            var response = Request.CreateResponse<classRoomWebSite.Data.Cat1>(HttpStatusCode.Created, value);
            response.Headers.Location = new Uri( Url.Link("DefaultApi", new { Identification = value.Identification }));

            return response;
        }

        public HttpResponseMessage Put(classRoomWebSite.Data.Cat1 value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            var cat1 = _context.Cat1.GetByKey(value.Identification);
            if (cat1 == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            _context.ApplyCurrentValues(cat1.EntityKey.EntitySetName, value);
            _context.SaveChanges();

            return new HttpResponseMessage(HttpStatusCode.OK);
        }

        public HttpResponseMessage Delete(System.Int32 identification)
        {
            var cat1 = _context.Cat1.GetByKey(identification);
            if (cat1 == null)
                return new HttpResponseMessage(HttpStatusCode.NotFound);

            _context.Cat1.DeleteObject(cat1);
            _context.SaveChanges();
            
            return new HttpResponseMessage(HttpStatusCode.OK);
        }
    }
}
